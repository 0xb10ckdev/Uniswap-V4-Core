name: Tests

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  unit-tests:
    name: Hardhat Unit Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - uses: actions/setup-node@v1
        with:
          node-version: 12.x
      - id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v1
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            yarn-
      - name: Install dependencies
        run: yarn install --frozen-lockfile
      # This is required separately from yarn test because it generates the typechain definitions
      - name: Compile
        run: yarn compile
      - name: Run unit tests
        run: yarn test

  coverage:
    name: Hardhat Coverage
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - uses: actions/setup-node@v1
        with:
          node-version: 12.x
      - id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v1
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            yarn-
      - name: Install dependencies
        run: yarn install --frozen-lockfile
      # This is required separately from yarn test because it generates the typechain definitions
      - name: Compile
        run: yarn compile
      - name: Run coverage
        # without service like coveralls, latest stats are just hardcoded as minimum threshold
        run: yarn run coverage && npx istanbul check-coverage --statements 83 --branches 75 --functions 76 --lines 83

  forge-tests:
    name: Forge Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - uses: actions/setup-node@v2
        with:
          node-version: '16'
          # cache: 'yarn'
      - run: yarn
      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: nightly
      - name: Run tests
        run: yarn test-forge -vvv
        env:
          FOUNDRY_PROFILE: ci
